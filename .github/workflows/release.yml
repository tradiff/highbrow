name: Create Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-x86_64
            rpm_enabled: true

    runs-on: ${{ matrix.os }}
    env:
      # Define the destination filename pattern once
      dst: highbrow-${{ github.ref_name }}-${{ matrix.name }}

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-4-dev librust-glib-dev rpm

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cargo-generate-rpm
        if: matrix.rpm_enabled
        run: cargo install cargo-generate-rpm

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Generate RPM package
        if: matrix.rpm_enabled
        shell: bash
        run: |
          set -euxo pipefail
          shopt -s globstar
          cargo generate-rpm --target ${{ matrix.target }}
          mv target/**/*.rpm "$dst.rpm"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload RPM
        if: matrix.rpm_enabled
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.dst }}.rpm
          asset_name: ${{ env.dst }}.rpm
          asset_content_type: application/octet-stream

      - name: Upload Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/highbrow
          asset_name: ${{ env.dst }}
          asset_content_type: application/octet-stream
